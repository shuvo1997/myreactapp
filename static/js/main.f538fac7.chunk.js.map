{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","step","current","winner","console","log","status","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAKE,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACCF,EAAMG,Q,IAKLC,E,kKAEJ,SAAaC,GAAI,IAAD,OACd,OAAO,cAACN,EAAD,CAAQI,MAAOG,KAAKN,MAAMO,QAAQF,GAC3BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAGlD,WACE,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GAvBTC,IAAMC,WA8BpBC,E,kDACJ,WAAYX,GAAO,IAAD,8BAChB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CAAC,CACNN,QAASO,MAAM,GAAGC,KAAK,QAE7BC,SAAS,EACTC,WAAY,GAPI,E,+CAWlB,SAAYZ,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAEZ,KAAKM,MAAMK,WAAa,GAE7DV,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQW,QAE7BE,EAAgBb,IAAYA,EAAQF,KAGvCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAU,IAAM,IACxCV,KAAKe,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CACzBf,QAASA,KAEXU,WAAYJ,EAAQM,OACpBH,SAAUV,KAAKM,MAAMI,a,oBAGvB,SAAOO,GACLjB,KAAKe,SAAS,CACZJ,WAAYM,EACZP,QAAUO,EAAO,IAAO,M,oBAI5B,WAAU,IAAD,OACDV,EAAUP,KAAKM,MAAMC,QACrBW,EAAUX,EAAQP,KAAKM,MAAMK,YAC7BQ,EAASL,EAAgBI,EAAQjB,SAEvCmB,QAAQC,IAAIP,EAAgBI,EAAQjB,UAEpC,IAaIqB,EAbEC,EAAQhB,EAAQiB,KAAI,SAACP,EAAKQ,GAC9B,IAAMC,EAAOD,EACX,eAAgBA,EAChB,mBACF,OACE,6BACE,wBAAQ7B,QAAW,kBAAM,EAAK+B,OAAOF,IAArC,SAA6CC,KADrCD,MAed,OALEH,EADCH,EACQ,UAAWA,EAEX,gBAAgBnB,KAAKM,MAAMI,QAAU,IAAI,KAIlD,sBAAKf,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEG,QAASiB,EAAQjB,QACjBL,QAAU,SAAAG,GAAC,OAAI,EAAK6B,YAAY7B,QAGpC,sBAAKJ,UAAU,YAAf,UACE,8BAAO2B,IACP,6BAAKC,c,GAzEIpB,IAAMC,WAuFzB,SAASU,EAAgBb,GAYvB,IAXE,IAAM4B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGF9B,EAAI,EAAGA,EAAI8B,EAAMhB,OAAQd,IAAI,CAAC,IAAD,cAClB8B,EAAM9B,GADY,GAC7B+B,EAD6B,KAC1BC,EAD0B,KACvBC,EADuB,KAGpC,GADAZ,QAAQC,IAAI,CAACS,EAAEC,EAAEC,IACd/B,EAAQ6B,IAAM7B,EAAQ6B,KAAO7B,EAAQ8B,IAAM9B,EAAQ6B,KAAO7B,EAAQ+B,GACnE,OAAO/B,EAAQ6B,GAGnB,OAAO,KAxBTG,IAASC,OACP,cAAC7B,EAAD,IACA8B,SAASC,eAAe,W","file":"static/js/main.f538fac7.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\n  function Square(props){\r\n    return(\r\n      <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n      </button>\r\n    );\r\n  } \r\n  \r\n  class Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n      return <Square value={this.props.squares[i]}\r\n                    onClick={() => this.props.onClick(i)} />;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        history: [{\r\n            squares: Array(9).fill(null),\r\n      }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n      };\r\n    }\r\n\r\n    handleClick(i){\r\n      const history = this.state.history.slice(0,this.state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n\r\n      if(calculateWinner(squares) || squares[i]){\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n      this.setState({ \r\n        history: history.concat([{\r\n        squares: squares,\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext});\r\n    }\r\n\r\n    jumpTo(step){\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0,\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n\r\n      console.log(calculateWinner(current.squares));\r\n\r\n      const moves = history.map((step,move) => {\r\n        const desc = move ? \r\n          'Go to move #' +move :\r\n          'Go to game start' ;\r\n        return (\r\n          <li key= {move}>\r\n            <button onClick = {() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        );\r\n      });\r\n\r\n      \r\n\r\n      let status;\r\n      if(winner){\r\n        status = 'Winner '+ winner;\r\n      }else{\r\n        status = 'Next player '+(this.state.xIsNext ? 'X':'O');\r\n      } \r\n\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n              squares={current.squares} \r\n              onClick= {i => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{ status }</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n\r\n  function calculateWinner(squares){\r\n      const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n  \r\n    for (let i = 0; i < lines.length; i++){\r\n      const [a, b, c] = lines[i];\r\n      console.log([a,b,c]);\r\n      if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  "],"sourceRoot":""}