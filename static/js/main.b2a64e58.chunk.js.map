{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","PlayAgainButton","Board","i","this","squares","renderSquare","React","Component","initialState","history","Array","fill","xIsNext","stepNumber","Game","state","slice","length","calculateWinner","setState","concat","step","current","winner","console","log","status","moves","map","move","desc","jumpTo","handleClick","class","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2a64e58.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\n  function Square(props){\r\n    return(\r\n      <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n      </button>\r\n    );\r\n  }\r\n  \r\n  function PlayAgainButton(props){\r\n    return(\r\n      <button>Play Again</button>\r\n    );\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n      return <Square value={this.props.squares[i]}\r\n                    onClick={() => this.props.onClick(i)} />;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  \r\n  const initialState = {\r\n    history: [{\r\n        squares: Array(9).fill(null),\r\n    }],\r\n    xIsNext: true,\r\n    stepNumber: 0,\r\n  };\r\n\r\n  class Game extends React.Component {\r\n\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.state = initialState;\r\n    }\r\n\r\n    handleClick(i){\r\n      const history = this.state.history.slice(0,this.state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n\r\n      if(calculateWinner(squares) || squares[i]){\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n      this.setState({ \r\n        history: history.concat([{\r\n        squares: squares,\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext});\r\n    }\r\n\r\n    jumpTo(step){\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0,\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n\r\n      console.log(calculateWinner(current.squares));\r\n\r\n      const moves = history.map((step,move) => {\r\n        const desc = move ? \r\n          'Go to move #' +move :\r\n          'Go to game start' ;\r\n        return (\r\n          <li key= {move}>\r\n            <button onClick = {() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        );\r\n      });\r\n\r\n      \r\n\r\n      let status;\r\n      if(winner){\r\n        status = 'Winner '+ winner;\r\n      }else{\r\n        status = 'Next player '+(this.state.xIsNext ? 'X':'O');\r\n      } \r\n\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n              squares={current.squares} \r\n              onClick= {i => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div class=\"play-again\">\r\n          <PlayAgainButton state= {initialState}></PlayAgainButton>\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{ status }</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n\r\n  function calculateWinner(squares){\r\n      const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n  \r\n    for (let i = 0; i < lines.length; i++){\r\n      const [a, b, c] = lines[i];\r\n      console.log([a,b,c]);\r\n      if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  "],"sourceRoot":""}